<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Structure.Code.Migrations.RenamePagesAsNonTerminal" locale="">
  <web>Structure.Code.Migrations</web>
  <name>RenamePagesAsNonTerminal</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>1. Rename pages as non terminal</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
#macro (getInitialResults $originalXClass)
  * Data pages to migrate:
  |=Page name|=Current parent|=New parent
  #set ($contentSpaces = ['Structure'])
  #foreach ($contentSpace in $contentSpaces)
    #set ($parentSpaceReference = $services.model.resolveSpace($contentSpace))
    #set ($parentReference = $services.model.createDocumentReference('WebHome', $parentSpaceReference))
    #set ($statement = "where doc.space = '$contentSpace' and doc.fullName &lt;&gt; 'Structure.WebHome' and doc.fullName &lt;&gt; 'Structure.WebPreferences'")
    #set ($results = $services.query.xwql($statement).execute())
    #foreach ($result in $results)
      ## Exclude technical pages.
      #if (!$result.endsWith('Class') &amp;&amp; !$result.endsWith('Sheet') &amp;&amp; !$result.endsWith('Template'))
       #set ($resultDoc = $xwiki.getDocument($result))
       |$resultDoc|$resultDoc.parent|$services.model.serialize($parentReference)
      #end
    #end
  #end
#end

#macro (executeMigration $originalXClass $newXClass)
  #set ($contentSpaces = ['Structure'])
  #foreach ($contentSpace in $contentSpaces)
    #set ($parentSpaceReference = $services.model.resolveSpace($contentSpace))
    #set ($parentReference = $services.model.createDocumentReference('WebHome', $parentSpaceReference))
    #set ($statement = "where doc.space = '$contentSpace' and doc.fullName &lt;&gt; 'Structure.WebHome' and doc.fullName &lt;&gt; 'Structure.WebPreferences'")
    #set ($results = $services.query.xwql($statement).execute())
    |=Page name|=Old reference|=New reference|=Parent
    #foreach ($result in $results)
      ## Exclude technical pages.
      #if (!$result.endsWith('Class') &amp;&amp; !$result.endsWith('Sheet') &amp;&amp; !$result.endsWith('Template'))
        #set ($resultDoc = $xwiki.getDocument($result))
        #set ($discard = $resultDoc.setParent($parentReference))
        #set ($discard = $resultDoc.save("Set parent reference to [$parentReference]"))
        #set ($oldDocRef = $resultDoc.documentReference)
        #set ($newDocRef = $services.model.createDocumentReference('WebHome', $services.model.resolveSpace($oldDocRef)))
        #set ($renameRequest = $services.refactoring.createRenameRequest($oldDocRef, $newDocRef))
        #set ($discard = $renameRequest.setDeleteSource(true))
        #set ($discard = $renameRequest.setAutoRedirect(false))
        #set ($discard = $renameRequest.setUpdateParentField(false))
        #set ($discard = $services.refactoring.rename($renameRequest).join())
      #end
    #end
  #end
#end

#macro (migrate)

  {{info}}Rename as Non Terminal all the pages from Structure, except the technical ones (Class, Sheet, Template) and set their parent to **Structure.WebHome**, at the first step.{{/info}}

  #if ("$!request.confirm" != 'true')
    #getInitialResults()

    #if ($results.size() &gt; 0)
      {{html clean="false"}}&lt;a href="$doc.getURL('view', 'confirm=true')" class='button'&gt;Start&lt;/a&gt;{{/html}}
    #end
  #else
    #executeMigration()
  #end
#end
{{/velocity}}

{{velocity}}
#migrate()
{{/velocity}}</content>
</xwikidoc>
