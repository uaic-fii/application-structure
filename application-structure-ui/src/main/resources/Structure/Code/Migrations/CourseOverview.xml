<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Structure.Code.Migrations.CourseOverview" locale="">
  <web>Structure.Code.Migrations</web>
  <name>CourseOverview</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>Structure.Code.Migrations.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>4. Migrate Course Overview pages</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#migrate()

#macro (migrate)

  {{info}}Migrate the old **content** course overview page to a new **data structure** page.{{/info}}

  #if ("$!request.confirm" != 'true')
    #getInitialResults()
    #if ($results.size() &gt; 0)
      {{html clean="false"}}&lt;a href="$doc.getURL('view', 'confirm=true')" class='button'&gt;Start&lt;/a&gt;{{/html}}
    #end
  #else
    #executeMigration()
  #end
#end

#macro (getInitialResults)
  * Data pages to migrate:
  #set ($statement = "where doc.content like '%[[Course Description&gt;&gt;%' and doc.fullName &lt;&gt; '$doc.fullName'")
  #set ($results = $services.query.xwql($statement).execute())
  #if ($results.size() &gt; 0)
    #foreach ($result in $results)
      ** [[$result]]
    #end
  #else
    ** No data pages to migrate!
  #end
#end

#macro (executeMigration)
  #set ($results = $services.query.xwql("where doc.content like '%[[Course Description&gt;&gt;%' and doc.fullName &lt;&gt; '$doc.fullName'").execute())
  #foreach ($result in $results)
    #set ($valuesMap = {})
  -----
    [[$result]]
    #set ($overviewDoc = $xwiki.getDocument($result))
    ##
    ## =Algebraic Foundations of Computer Science=
    #set ($title = $overviewDoc.content.split('=')[1])
    ##
    ## [[Course web page&gt;&gt;http://profs.info.uaic.ro/~~adiftene/Scoala/2016/IP/index.htm]]
    #set ($courseWebPage = $overviewDoc.content.split('&gt;&gt;')[1].split(']]')[0].replace('~~', '~'))
    ##
    ## [[Course Description&gt;&gt;Structure.ProgrammingEngineeringDescription2016]]
    #set ($courseDescription = $overviewDoc.content.split('&gt;&gt;')[2].split(']]')[0])
    ##
    #*
      * Course Teachers
      ** [[Adrian Iftene&gt;&gt;XWiki.adiftene]]
      ** [[Mihai Alex Moruz&gt;&gt;XWiki.mmoruz]]
    *#
    #set ($teacherParts = $overviewDoc.content.split('Course Teachers')[1])
    #set ($courseTeachersParts = $teacherParts.split('Seminary/Laboratory Teachers'))
    #set ($courseTeachers = $courseTeachersParts[0])
    ##
    ## Identify teachers
    #*
      ** Ferucio Laurențiu Țiplea
      ** [[Sorin Iftene&gt;&gt;XWiki.siftene]]
    *#
    ##
    ## Course teachers
    #parseTeachers($courseTeachers $teachersArray)
    #set ($cTeachers = $teachersArray)
    #if ($courseTeachersParts.size() &gt; 1)
      #set ($seminarTeachers = $courseTeachersParts[1])
      ## Seminary teachers
      #parseTeachers($seminarTeachers $teachersArray)
        #set ($lTeachers = $teachersArray)
    #end
    ##
    ## Add new object to the Overview page
    #set ($overviewObj = $overviewDoc.newObject('Structure.Code.CourseOverviewClass'))
    #set ($discard = $overviewObj.set('courseWebPage', $courseWebPage))
    #set ($discard = $overviewObj.set('courseDescription', $courseDescription))
    #set ($discard = $overviewObj.set('courseTeachers',  $stringtool.join($cTeachers, ',')))
    #set ($discard = $overviewObj.set('laboratoryTeachers', $stringtool.join($lTeachers, ',')))
    ##
    ## Set title
    #set ($discard = $overviewDoc.setTitle($title))

    ## Compute a json for a nice display.
    #set ($discard = $valuesMap.put('title', $title))
    #set ($discard = $valuesMap.put('courseWebPage', $courseWebPage))
    #set ($discard = $valuesMap.put('courseDescription', $courseDescription))
    #set ($discard = $valuesMap.put('courseTeachers', $stringtool.join($cTeachers, ',')))
    #set ($discard = $valuesMap.put('laboratoryTeachers', $stringtool.join($lTeachers, ',')))
    ##
    (%class="json"%)$jsontool.serialize($valuesMap)

    #if (!$jsontool.serialize($valuesMap).contains('ERROR'))
      ## Remove the content as the Overview sheet will handle the view.
      #set ($discard = $overviewDoc.setContent(''))
      #set ($discard = $overviewDoc.save())
    #end
  #end
#end

#macro (parseTeachers $teachers $teachersArray)
  #set ($teachersArray = [])
  #foreach ($line in $teachers.split('\*\* '))
    #if ($foreach.index &gt; 0)
      ## Teachers having fullname + username
      #if ($line.startsWith('[['))
        #set ($line = $line.replace('[[', '').replace(']]', ''))
        #set ($lineParts = $line.split('&gt;&gt;'))
        #if ($lineParts.size() &gt; 1)
          #set ($userName = $lineParts[1].toString())
        #else
          ## Wrong user format
          #set ($userName = "ERROR: $lineParts[0]")
        #end
        #set ($discard = $teachersArray.add($userName.replace('*', '').trim()))
      ## Wrong user format
      #else
        #set ($discard = $teachersArray.add("ERROR: $line"))
      #end
    #end
  #end
#end
{{/velocity}}
</content>
  <object>
    <name>Structure.Code.Migrations.CourseOverview</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>3b393439-9983-4ad9-9df8-dd8b5e421947</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery'], function ($) {
  var counter = 0;
  $('.json').each(function() {
    var jsonPretty = JSON.stringify(JSON.parse($(this).text()),null,2);
    var newContent = '';
    if (jsonPretty.includes('ERROR')) {
      counter ++;
      newContent = newContent + "&lt;div class='box errormessage'&gt;&lt;p&gt;There are broken users in this page. The expected format is [[Firstname Lastname&gt;&gt;XWiki.username]]&lt;/p&gt;&lt;/div&gt;&lt;br&gt;";
    }
    newContent = newContent + '&lt;pre&gt;' + jsonPretty + '&lt;/pre&gt;';
    $(this).html(newContent);
  })
  
  if (counter &gt; 0) {
    var headerError = "&lt;div class='box errormessage'&gt;&lt;p&gt;There are broken users in " + counter + " pages. The expected format is [[Firstname Lastname&gt;&gt;XWiki.username]]. Please scroll down and fix the pages before reexecuting the script!&lt;/p&gt;&lt;/div&gt;&lt;br&gt;";
    $('.box.infomessage').after(headerError);
  }
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
</xwikidoc>
